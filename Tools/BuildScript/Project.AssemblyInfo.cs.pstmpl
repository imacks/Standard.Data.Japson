//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

#if NETFX
using System.Resources;
using System.Security.Permissions;
#endif

// *********************************************************************************

// General metadata
// ================
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.

[assembly: AssemblyCompany("<%= $data.company %>")]
[assembly: AssemblyCopyright("<%= $data.copyright %>")]
[assembly: AssemblyTrademark("<%= $data.trademark %>")]

// Product name
[assembly: AssemblyProduct("<%= $data.product %>")]

// Assembly title
[assembly: AssemblyTitle("<%= $data.name %>")]

// Assembly description
#if NETSTANDARD1_0
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.0]")]
#elif NETSTANDARD1_1
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.1]")]
#elif NETSTANDARD1_2
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.2]")]
#elif NETSTANDARD1_3
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.3]")]
#elif NETSTANDARD1_4
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.4]")]
#elif NETSTANDARD1_5
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.5]")]
#elif NETSTANDARD1_6
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard 1.6]")]
#elif NETSTANDARD
[assembly: AssemblyDescription("<%= $data.description %> [.NET Standard]")]
#elif NETCOREAPP1_0
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core App 1.0]")]
#elif NETCOREAPP
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core App]")]
#elif UAP10
[assembly: AssemblyDescription("<%= $data.description %> [Universal Windows Platform 1.0]")]
#elif UAP
[assembly: AssemblyDescription("<%= $data.description %> [Universal Windows Platform]")]
#elif NETCORE45
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core 4.5]")]
#elif NETCORE451
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core 4.5.1]")]
#elif NETCORE50
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core 5.0]")]
#elif NETCORE
[assembly: AssemblyDescription("<%= $data.description %> [.NET Core]")]
#elif NET11
[assembly: AssemblyDescription("<%= $data.description %> [.NET 1.1]")]
#elif NET20
[assembly: AssemblyDescription("<%= $data.description %> [.NET 2.0]")]
#elif NET35
[assembly: AssemblyDescription("<%= $data.description %> [.NET 3.5]")]
#elif NET40
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.0]")]
#elif NET403
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.0.3]")]
#elif NET45
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.5]")]
#elif NET451
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.5.1]")]
#elif NET452
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.5.2]")]
#elif NET46
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.6]")]
#elif NET461
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.6.1]")]
#elif NET462
[assembly: AssemblyDescription("<%= $data.description %> [.NET 4.6.2]")]
#elif NETFX
[assembly: AssemblyDescription("<%= $data.description %> [.NET Framework]")]
#elif PORTABLE
[assembly: AssemblyDescription("<%= $data.description %> [.NET Portable Class Library]")]
#elif NETCF
[assembly: AssemblyDescription("<%= $data.description %> [.NET Compact Framework]")]
#elif NETMF
[assembly: AssemblyDescription("<%= $data.description %> [.NET Micro Framework]")]
#else
[assembly: AssemblyDescription("<%= $data.description %> [.NET Platform]")]
#endif

// This is a friendly default alias in cases where the assembly name is not friendly or is a GUID.
[assembly: AssemblyDefaultAlias("<%= $data.fileName %>")]


// *********************************************************************************

// Version
// =======
[assembly: AssemblyVersion("<%= $data.fullVersion %>")]
[assembly: AssemblyFileVersion("<%= $data.fullVersion %>")]
[assembly: AssemblyInformationalVersion("<%= $data.fullVersion %>")]

#if NETFX
[assembly: TypeLibVersion(<%= $data.version.major %>, <%= $data.version.minor %>)]

// Instructs a ResourceManager object to ask for a particular version of a satellite assembly.
[assembly: SatelliteContractVersion("<%= $data.fullVersion %>")]
#endif

// *********************************************************************************

// CLS behavior
// ============

// If an assembly is marked as CLS-compliant, any publicly exposed type in the assembly 
// that is not CLS-compliant must be marked with CLSCompliantAttribute using a false 
// argument. All non-compliant members must provide corresponding CLS-compliant 
// alternatives.
[assembly: CLSCompliant(<%= $data.clsCompliant.ToString().ToLower() %>)]


// *********************************************************************************

// Globalization
// =============
// Controls globalization settings.

// The attribute is used by compilers to distinguish between a main assembly and a 
// satellite assembly. You should only specify a culture when working with a 
// satellite assembly, as in [assembly:AssemblyCultureAttribute("de")]. 
// The main assembly should always be "", or it will break because no other code 
// will be able to find the library's entry points at runtime.
[assembly: AssemblyCulture("")]


<% if ($data.comGuid) { %>
// *********************************************************************************

// COM Interop
// ===========

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(true)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("<%= $data.comGuid.ToLower() %>")]

// COM exposed version
[assembly: ComCompatibleVersion(<%= $data.version.major %>, <%= $data.version.minor %>, <%= $data.version.build %>, <%= $data.version.revision %>)]
<% } %>


// *********************************************************************************

#if NETFX

// This attribute is used by Ngen.exe to generate native assembly images. 
// A dependency that is likely to be loaded (Always) will cause Ngen.exe to bind to that 
// dependency. Using this hint allows Ngen.exe to generate code that will result in a 
// reduced working set and improved throughput but at the cost of always loading the 
// dependency when the parent assembly is loaded. 
[assembly: DefaultDependency(LoadHint.Always)]

// Runtime Security
// ================
<% if ($data.allowPartialTrust) { %>
[assembly: AllowPartiallyTrustedCallers]
<% } %>
[assembly: SecurityRules(SecurityRuleSet.Level2, SkipVerificationInFullTrust = true)]

#endif


// *********************************************************************************

<% ($data.internalsVisibleTo) | where { $_ -ne $null } | ForEach-Object { 
    if ($_ -is [string]) {
%>
[assembly: InternalsVisibleTo("<%= $_ %>")]
<%
    } else {
%>
[assembly: InternalsVisibleTo("<%= $_.name %>, PublicKey=<%= $_.publicKeyToken %>")]
<%
    }
%>
<% } %>
